# Plot the histogram of Fmiss distribution
plot <- ggplot(missing_distribution, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(
title = "Distribution of Missing Genotype Fraction (Fmiss) per SNP (FC-VN)",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)"
) +
theme_minimal()
# Save the plot to a file
ggsave("Fmiss_distribution_histogram.png", plot = plot, width = 10, height = 6, dpi = 300)
getwd()
setwd("..")
setwd("SPID_VN/")
# Load necessary libraries
library(dplyr)
library(rlang)
# Read the CSV file
data <- read.csv("SPID_VN.csv")
# Print the ID and ALT columns before processing
cat("ID and ALT for each variant:\n")
print(data %>% select(ID, ALT))
# Define valid genotypes
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0", "1/0")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Calculate N_MISS (number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Add Fmiss to the original data
data$Fmiss <- fmiss_per_snp
# Filter out rows where Fmiss > 0.10
filtered_data <- data %>% filter(Fmiss <= 0.10)
removed_data <- data %>% filter(Fmiss > 0.10)
# Save the filtered and removed data to new CSV files
write.csv(filtered_data, "filtered_qc_SPID_VN_variants.csv", row.names = FALSE)
write.csv(removed_data, "removed_qc_SPID_VN_variants.csv", row.names = FALSE)
# Print summary of the process
cat("Variants before filtering:", nrow(data), "\n")
cat("Variants after filtering:", nrow(filtered_data), "\n")
cat("Variants removed:", nrow(removed_data), "\n")
# Load necessary libraries
library(ggplot2)
# Read the filtered and removed data
filtered_data <- read.csv("filtered_qc_SPID_VN_variants.csv")
removed_data <- read.csv("removed_qc_SPID_VN_variants.csv")
# Plot the distribution of Fmiss for filtered variants
ggplot(filtered_data, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(title = "Distribution of Missing Genotype Fraction\n(Fmiss_SPID_VN) for Filtered Variants",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)") +
theme_minimal()
# Save the filtered variants plot
ggsave("filtered_variants_fmiss_distribution.png")
# Plot the distribution of Fmiss for removed variants
ggplot(removed_data, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "red", color = "black") +
labs(title = "Distribution of Missing Genotype Fraction\n(Fmiss_SPID_VN) for Removed Variants",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)") +
theme_minimal()
# Save the removed variants plot
ggsave("removed_variants_fmiss_distribution.png")
# Load necessary libraries
library(ggplot2)
# Assuming your data is loaded into a data frame called 'data'
# Replace 'sample1.csv' with your actual file path
data <- read.csv("SPID_VN.csv")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Define valid genotypes (these are the non-missing genotypes)
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0","1/0")
# Calculate N-MISS (Number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Create a data frame for plotting
missing_distribution <- data.frame(
CHROM = data$CHROM,
POSITION = data$POSITION,
N_MISS = n_miss_per_snp,
Fmiss = fmiss_per_snp
)
# Plot the histogram of Fmiss distribution
plot <- ggplot(missing_distribution, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(
title = "Distribution of Missing Genotype Fraction (Fmiss) per SNP (SPID-VN)",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)"
) +
theme_minimal()
# Save the plot to a file
ggsave("Fmiss_distribution_histogram.png", plot = plot, width = 10, height = 6, dpi = 300)
# Load necessary libraries
library(ggplot2)
# Assuming your data is loaded into a data frame called 'data'
# Replace 'sample1.csv' with your actual file path
data <- read.csv("FC_VN.csv")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Define valid genotypes (these are the non-missing genotypes)
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0","1/0")
# Calculate N-MISS (Number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Create a data frame for plotting
missing_distribution <- data.frame(
CHROM = data$CHROM,
POSITION = data$POSITION,
N_MISS = n_miss_per_snp,
Fmiss = fmiss_per_snp
)
# Plot the histogram of Fmiss distribution
plot <- ggplot(missing_distribution, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(
title = "Distribution of Missing Genotype Fraction (Fmiss) per SNP (FC-VN)",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)"
) +
theme_minimal()
# Save the plot to a file
ggsave("Fmiss_distribution_histogram.png", plot = plot, width = 10, height = 6, dpi = 300)
# Load necessary libraries
library(ggplot2)
# Assuming your data is loaded into a data frame called 'data'
# Replace 'sample1.csv' with your actual file path
data <- read.csv("SPID_VN.csv")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Define valid genotypes (these are the non-missing genotypes)
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0","1/0")
# Calculate N-MISS (Number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Create a data frame for plotting
missing_distribution <- data.frame(
CHROM = data$CHROM,
POSITION = data$POSITION,
N_MISS = n_miss_per_snp,
Fmiss = fmiss_per_snp
)
# Plot the histogram of Fmiss distribution
plot <- ggplot(missing_distribution, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(
title = "Distribution of Missing Genotype Fraction (Fmiss) per SNP (SPID-VN)",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)"
) +
theme_minimal()
# Save the plot to a file
ggsave("Fmiss_distribution_histogram.png", plot = plot, width = 10, height = 6, dpi = 300)
setwd("..")
setwd("FP_VN/")
# Load necessary libraries
library(ggplot2)
# Assuming your data is loaded into a data frame called 'data'
# Replace 'sample1.csv' with your actual file path
data <- read.csv("FC_VN.csv")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Define valid genotypes (these are the non-missing genotypes)
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0","1/0")
# Calculate N-MISS (Number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Create a data frame for plotting
missing_distribution <- data.frame(
CHROM = data$CHROM,
POSITION = data$POSITION,
N_MISS = n_miss_per_snp,
Fmiss = fmiss_per_snp
)
# Plot the histogram of Fmiss distribution
plot <- ggplot(missing_distribution, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(
title = "Distribution of Missing Genotype Fraction (Fmiss) per SNP (FC-VN)",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)"
) +
theme_minimal()
# Save the plot to a file
ggsave("Fmiss_distribution_histogram.png", plot = plot, width = 10, height = 6, dpi = 300)
# Load necessary libraries
library(ggplot2)
# Assuming your data is loaded into a data frame called 'data'
# Replace 'sample1.csv' with your actual file path
data <- read.csv("FP_VN.csv")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Define valid genotypes (these are the non-missing genotypes)
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0","1/0")
# Calculate N-MISS (Number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Create a data frame for plotting
missing_distribution <- data.frame(
CHROM = data$CHROM,
POSITION = data$POSITION,
N_MISS = n_miss_per_snp,
Fmiss = fmiss_per_snp
)
# Plot the histogram of Fmiss distribution
plot <- ggplot(missing_distribution, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(
title = "Distribution of Missing Genotype Fraction (Fmiss) per SNP (FP-VN)",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)"
) +
theme_minimal()
# Save the plot to a file
ggsave("Fmiss_distribution_histogram.png", plot = plot, width = 10, height = 6, dpi = 300)
# Load necessary libraries
library(ggplot2)
# Read the filtered and removed data
filtered_data <- read.csv("filtered_qc_FP_VN_variants.csv")
removed_data <- read.csv("removed_qc_FP_VN_variants.csv")
# Plot the distribution of Fmiss for filtered variants
ggplot(filtered_data, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(title = "Distribution of Missing Genotype Fraction\n(Fmiss_FP_VN) for Filtered Variants",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)") +
theme_minimal()
# Save the filtered variants plot
ggsave("filtered_variants_fmiss_distribution.png")
# Plot the distribution of Fmiss for removed variants
ggplot(removed_data, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "red", color = "black") +
labs(title = "Distribution of Missing Genotype Fraction\n(Fmiss_FP_VN) for Removed Variants",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)") +
theme_minimal()
# Save the removed variants plot
ggsave("removed_variants_fmiss_distribution.png")
setwd("..")
setwd("FC_FP/")
# Load necessary libraries
library(dplyr)
library(rlang)
# Read the CSV file
data <- read.csv("FC_FP.csv")
# Print the ID and ALT columns before processing
cat("ID and ALT for each variant:\n")
print(data %>% select(ID, ALT))
# Define valid genotypes
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0", "1/0")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Calculate N_MISS (number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Add Fmiss to the original data
data$Fmiss <- fmiss_per_snp
# Filter out rows where Fmiss > 0.10
filtered_data <- data %>% filter(Fmiss <= 0.10)
removed_data <- data %>% filter(Fmiss > 0.10)
# Save the filtered and removed data to new CSV files
write.csv(filtered_data, "filtered_qc_FC_FP_variants.csv", row.names = FALSE)
write.csv(removed_data, "removed_qc_FC_FP_variants.csv", row.names = FALSE)
# Print summary of the process
cat("Variants before filtering:", nrow(data), "\n")
cat("Variants after filtering:", nrow(filtered_data), "\n")
cat("Variants removed:", nrow(removed_data), "\n")
# Load necessary libraries
library(ggplot2)
# Read the filtered and removed data
filtered_data <- read.csv("filtered_qc_FC_FP_variants.csv")
removed_data <- read.csv("removed_qc_FC_FP_variants.csv")
# Plot the distribution of Fmiss for filtered variants
ggplot(filtered_data, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(title = "Distribution of Missing Genotype Fraction\n(Fmiss_FC_FP) for Filtered Variants",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)") +
theme_minimal()
# Save the filtered variants plot
ggsave("filtered_variants_fmiss_distribution.png")
# Plot the distribution of Fmiss for removed variants
ggplot(removed_data, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "red", color = "black") +
labs(title = "Distribution of Missing Genotype Fraction\n(Fmiss_FC_FP) for Removed Variants",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)") +
theme_minimal()
# Save the removed variants plot
ggsave("removed_variants_fmiss_distribution.png")
# Load necessary libraries
library(ggplot2)
# Assuming your data is loaded into a data frame called 'data'
# Replace 'sample1.csv' with your actual file path
data <- read.csv("FC_FP.csv")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Define valid genotypes (these are the non-missing genotypes)
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0","1/0")
# Calculate N-MISS (Number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Create a data frame for plotting
missing_distribution <- data.frame(
CHROM = data$CHROM,
POSITION = data$POSITION,
N_MISS = n_miss_per_snp,
Fmiss = fmiss_per_snp
)
# Plot the histogram of Fmiss distribution
plot <- ggplot(missing_distribution, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(
title = "Distribution of Missing Genotype Fraction (Fmiss) per SNP (FC-FP)",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)"
) +
theme_minimal()
# Save the plot to a file
ggsave("Fmiss_distribution_histogram.png", plot = plot, width = 10, height = 6, dpi = 300)
setwd
setwd("..")
setwd("FC_VN/")
# Load necessary libraries
library(dplyr)
library(rlang)
# Read the CSV file
data <- read.csv("FC_VN.csv")
# Print the ID and ALT columns before processing
cat("ID and ALT for each variant:\n")
print(data %>% select(ID, ALT))
# Define valid genotypes
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0", "1/0")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Calculate N_MISS (number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Add Fmiss to the original data
data$Fmiss <- fmiss_per_snp
# Filter out rows where Fmiss > 0.10
filtered_data <- data %>% filter(Fmiss <= 0.10)
removed_data <- data %>% filter(Fmiss > 0.10)
# Save the filtered and removed data to new CSV files
write.csv(filtered_data, "filtered_qc_FC_VN_variants.csv", row.names = FALSE)
write.csv(removed_data, "removed_qc_FC_VN_variants.csv", row.names = FALSE)
# Print summary of the process
cat("Variants before filtering:", nrow(data), "\n")
cat("Variants after filtering:", nrow(filtered_data), "\n")
cat("Variants removed:", nrow(removed_data), "\n")
# Optionally, you can print some of the removed variants with their ID, ALT, and Fmiss values
cat("\nRemoved variants (ID, ALT, Fmiss):\n")
print(removed_data %>% select(ID, ALT, Fmiss))
setwd("..")
setwd("FP_VN/")
# Load necessary libraries
library(dplyr)
library(rlang)
# Read the CSV file
data <- read.csv("FP_VN.csv")
# Print the ID and ALT columns before processing
cat("ID and ALT for each variant:\n")
print(data %>% select(ID, ALT))
# Define valid genotypes
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0", "1/0")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Calculate N_MISS (number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Add Fmiss to the original data
data$Fmiss <- fmiss_per_snp
# Filter out rows where Fmiss > 0.10
filtered_data <- data %>% filter(Fmiss <= 0.10)
removed_data <- data %>% filter(Fmiss > 0.10)
# Save the filtered and removed data to new CSV files
write.csv(filtered_data, "filtered_qc_FP_VN_variants.csv", row.names = FALSE)
write.csv(removed_data, "removed_qc_FP_VN_variants.csv", row.names = FALSE)
# Print summary of the process
cat("Variants before filtering:", nrow(data), "\n")
cat("Variants after filtering:", nrow(filtered_data), "\n")
cat("Variants removed:", nrow(removed_data), "\n")
getwd()
# Load necessary libraries
library(dplyr)
library(rlang)
# Read the CSV file
data <- read.csv("FP_VN.csv")
# Print the ID and ALT columns before processing
cat("ID and ALT for each variant:\n")
print(data %>% select(ID, ALT))
# Define valid genotypes
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0", "1/0")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Calculate N_MISS (number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Add Fmiss to the original data
data$Fmiss <- fmiss_per_snp
# Filter out rows where Fmiss > 0.10
filtered_data <- data %>% filter(Fmiss <= 0.10)
removed_data <- data %>% filter(Fmiss > 0.10)
# Save the filtered and removed data to new CSV files
write.csv(filtered_data, "filtered_qc_FP_VN_variants.csv", row.names = FALSE)
write.csv(removed_data, "removed_qc_FP_VN_variants.csv", row.names = FALSE)
# Print summary of the process
cat("Variants before filtering:", nrow(data), "\n")
cat("Variants after filtering:", nrow(filtered_data), "\n")
cat("Variants removed:", nrow(removed_data), "\n")
# Load necessary libraries
library(ggplot2)
# Read the filtered and removed data
filtered_data <- read.csv("filtered_qc_FP_VN_variants.csv")
removed_data <- read.csv("removed_qc_FP_VN_variants.csv")
# Plot the distribution of Fmiss for filtered variants
ggplot(filtered_data, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(title = "Distribution of Missing Genotype Fraction\n(Fmiss_FP_VN) for Filtered Variants",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)") +
theme_minimal()
# Save the filtered variants plot
ggsave("filtered_variants_fmiss_distribution.png")
# Plot the distribution of Fmiss for removed variants
ggplot(removed_data, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "red", color = "black") +
labs(title = "Distribution of Missing Genotype Fraction\n(Fmiss_FP_VN) for Removed Variants",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)") +
theme_minimal()
# Save the removed variants plot
ggsave("removed_variants_fmiss_distribution.png")
# Load necessary libraries
library(ggplot2)
# Assuming your data is loaded into a data frame called 'data'
# Replace 'sample1.csv' with your actual file path
data <- read.csv("FC_VN.csv")
# Extract genotype columns (columns ending with 'GT')
genotype_columns <- grep("GT$", colnames(data), value = TRUE)
# Define valid genotypes (these are the non-missing genotypes)
valid_genotypes <- c("0/0", "0/1", "1/1", "0|1", "1|1", "0|0", "1|0","1/0")
# Calculate N-MISS (Number of missing genotypes per SNP)
n_miss_per_snp <- apply(data[, genotype_columns], 1, function(row) {
sum(!(row %in% valid_genotypes)) # Count anything that's not a valid genotype as missing
})
# Calculate Fmiss (Fraction of missing genotypes per SNP)
total_genotype_columns <- length(genotype_columns)
fmiss_per_snp <- n_miss_per_snp / total_genotype_columns
# Create a data frame for plotting
missing_distribution <- data.frame(
CHROM = data$CHROM,
POSITION = data$POSITION,
N_MISS = n_miss_per_snp,
Fmiss = fmiss_per_snp
)
# Plot the histogram of Fmiss distribution
plot <- ggplot(missing_distribution, aes(x = Fmiss)) +
geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
labs(
title = "Distribution of Missing Genotype Fraction (Fmiss) per SNP (FC-VN)",
x = "Fmiss (Fraction of Missing Genotypes)",
y = "Frequency (Number of SNPs)"
) +
theme_minimal()
# Save the plot to a file
ggsave("Fmiss_distribution_histogram.png", plot = plot, width = 10, height = 6, dpi = 300)
